<Application x:Class="ClansApp.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ClansApp.UI"
             xmlns:vm="clr-namespace:ClansApp.UI.ViewModels"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cv="clr-namespace:ClansApp.UI.Converters"
             xmlns:v="clr-namespace:ClansApp.UI.Views"
             StartupUri="WindowFrame.xaml">
    <Application.Resources>
        <!--Converters-->
        <cv:MaximizeVisibilityConverter x:Key="MaximizeVisibilityConverter"/>
        <cv:RestoreVisibilityConverter x:Key="RestoreVisibilityConverter"/>
        
        <!--Colors-->
        <Color x:Key="WindowFrameColor">#FFEFEFF2</Color>
        <Color x:Key="WindowFrameButtonMarkedColor">#C6C6C6</Color>
        <SolidColorBrush x:Key="WindowFrameBrush" Color="{StaticResource WindowFrameColor}"/>
        <SolidColorBrush x:Key="WindowFrameButonMarkedBrush" Color="{StaticResource WindowFrameButtonMarkedColor}"/>
        
        <!--Styles-->
        <Style x:Key="WindowFrameButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource WindowFrameBrush}"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter Width="10"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource WindowFrameButonMarkedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Main window style-->
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="30" ResizeBorderThickness="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="DataContext">
                <Setter.Value>
                    <vm:WindowFrameViewModel/>
                </Setter.Value>
            </Setter>
            <Setter Property="WindowStyle" Value="None"/>
            <!--<Setter Property="AllowsTransparency" Value="True"/>-->
            <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
            <Setter Property="WindowState" Value="{Binding WindowState}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid Background="{StaticResource WindowFrameBrush}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding MoveWindowCommand}" 
                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="{StaticResource WindowFrameBrush}" Grid.Column="0">
                                    <TextBlock Text="{TemplateBinding Property=Title}"  
                                               Foreground="#FF4E4E50" 
                                               Margin="5,5,0,5" 
                                               Grid.Row="0"
                                               FontSize="15"
                                               VerticalAlignment="Center"/>
                                </Border>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" >
                                    <Button Style="{StaticResource WindowFrameButtonStyle}" 
                                            Command="{Binding MinimizeWindowCommand}">
                                        <Image Source="/Resources/MinimizeImage.png"/>
                                    </Button>
                                    <Button Style="{StaticResource WindowFrameButtonStyle}"
                                            Command="{Binding MaximizeWindowCommand}"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, 
                                                                 Path=WindowState, 
                                                                 Converter={StaticResource MaximizeVisibilityConverter}}">
                                        <Image Source="/Resources/MaximizeImage.png"/>
                                    </Button>
                                    <Button Style="{StaticResource WindowFrameButtonStyle}"
                                            Command="{Binding RestoreWindowCommand}"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                                                                 Path=WindowState,
                                                                 Converter={StaticResource RestoreVisibilityConverter}}">
                                        <Image Source="/Resources/RestoreImage.png"/>
                                    </Button>
                                    <Button Style="{StaticResource WindowFrameButtonStyle}"
                                            Command="{Binding CloseWindowCommand}" 
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                        <Image Source="/Resources/CloseImage.png"/>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Border Grid.Row="1" Background="White" Margin="5,0,5,5">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Data templates-->
        <DataTemplate DataType="{x:Type vm:LoginViewModel}">
            <v:LoginView/>
        </DataTemplate>
    </Application.Resources>
</Application>
